{"ast":null,"code":"import _defineProperty from \"D:/Documents/Temporary (No Storage)/GitHub/pollyliu1.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { Animation } from '@motionone/animation';\nimport { defaults, isEasingGenerator, isNumber, time, isEasingList, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\nfunction getDevToolsRecord() {\n  return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var record = getDevToolsRecord();\n  var isRecording = options.record !== false && record;\n  var animation;\n  var _options$duration = options.duration,\n    duration = _options$duration === void 0 ? defaults.duration : _options$duration,\n    _options$delay = options.delay,\n    delay = _options$delay === void 0 ? defaults.delay : _options$delay,\n    _options$endDelay = options.endDelay,\n    endDelay = _options$endDelay === void 0 ? defaults.endDelay : _options$endDelay,\n    _options$repeat = options.repeat,\n    repeat = _options$repeat === void 0 ? defaults.repeat : _options$repeat,\n    _options$easing = options.easing,\n    easing = _options$easing === void 0 ? defaults.easing : _options$easing,\n    direction = options.direction,\n    offset = options.offset,\n    _options$allowWebkitA = options.allowWebkitAcceleration,\n    allowWebkitAcceleration = _options$allowWebkitA === void 0 ? false : _options$allowWebkitA;\n  var data = getAnimationData(element);\n  var canAnimateNatively = supports.waapi();\n  var valueIsTransform = isTransform(key);\n  /**\n   * If this is an individual transform, we need to map its\n   * key to a CSS variable and update the element's transform style\n   */\n  valueIsTransform && addTransformToElement(element, key);\n  var name = getStyleName(key);\n  var motionValue = getMotionValue(data.values, name);\n  /**\n   * Get definition of value, this will be used to convert numerical\n   * keyframes into the default value type.\n   */\n  var definition = transformDefinitions.get(name);\n  /**\n   * Stop the current animation, if any. Because this will trigger\n   * commitStyles (DOM writes) and we might later trigger DOM reads,\n   * this is fired now and we return a factory function to create\n   * the actual animation that can get called in batch,\n   */\n  stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) && options.record !== false);\n  /**\n   * Batchable factory function containing all DOM reads.\n   */\n  return function () {\n    var readInitialValue = function readInitialValue() {\n      var _a, _b;\n      return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0;\n    };\n    /**\n     * Replace null values with the previous keyframe value, or read\n     * it from the DOM if it's the first keyframe.\n     */\n    var keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n    if (isEasingGenerator(easing)) {\n      var custom = easing.createAnimation(keyframes, readInitialValue, valueIsTransform, name, motionValue);\n      easing = custom.easing;\n      if (custom.keyframes !== undefined) keyframes = custom.keyframes;\n      if (custom.duration !== undefined) duration = custom.duration;\n    }\n    /**\n     * If this is a CSS variable we need to register it with the browser\n     * before it can be animated natively. We also set it with setProperty\n     * rather than directly onto the element.style object.\n     */\n    if (isCssVar(name)) {\n      if (supports.cssRegisterProperty()) {\n        registerCssVariable(name);\n      } else {\n        canAnimateNatively = false;\n      }\n    }\n    /**\n     * If we can animate this value with WAAPI, do so. Currently this only\n     * feature detects CSS.registerProperty but could check WAAPI too.\n     */\n    if (canAnimateNatively) {\n      var _element$animate;\n      /**\n       * Convert numbers to default value types. Currently this only supports\n       * transforms but it could also support other value types.\n       */\n      if (definition) {\n        keyframes = keyframes.map(function (value) {\n          return isNumber(value) ? definition.toDefaultUnit(value) : value;\n        });\n      }\n      /**\n       * If this browser doesn't support partial/implicit keyframes we need to\n       * explicitly provide one.\n       */\n      if (keyframes.length === 1 && (!supports.partialKeyframes() || isRecording)) {\n        keyframes.unshift(readInitialValue());\n      }\n      var animationOptions = {\n        delay: time.ms(delay),\n        duration: time.ms(duration),\n        endDelay: time.ms(endDelay),\n        easing: !isEasingList(easing) ? convertEasing(easing) : undefined,\n        direction: direction,\n        iterations: repeat + 1,\n        fill: \"both\"\n      };\n      animation = element.animate((_element$animate = {}, _defineProperty(_element$animate, name, keyframes), _defineProperty(_element$animate, \"offset\", offset), _defineProperty(_element$animate, \"easing\", isEasingList(easing) ? easing.map(convertEasing) : undefined), _element$animate), animationOptions);\n      /**\n       * Polyfill finished Promise in browsers that don't support it\n       */\n      if (!animation.finished) {\n        animation.finished = new Promise(function (resolve, reject) {\n          animation.onfinish = resolve;\n          animation.oncancel = reject;\n        });\n      }\n      var target = keyframes[keyframes.length - 1];\n      animation.finished.then(function () {\n        // Apply styles to target\n        style.set(element, name, target);\n        // Ensure fill modes don't persist\n        animation.cancel();\n      }).catch(noop);\n      /**\n       * This forces Webkit to run animations on the main thread by exploiting\n       * this condition:\n       * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n       *\n       * This fixes Webkit's timing bugs, like accelerated animations falling\n       * out of sync with main thread animations and massive delays in starting\n       * accelerated animations in WKWebView.\n       */\n      if (!allowWebkitAcceleration) animation.playbackRate = 1.000001;\n      /**\n       * If we can't animate the value natively then we can fallback to the numbers-only\n       * polyfill for transforms.\n       */\n    } else if (valueIsTransform) {\n      /**\n       * If any keyframe is a string (because we measured it from the DOM), we need to convert\n       * it into a number before passing to the Animation polyfill.\n       */\n      keyframes = keyframes.map(function (value) {\n        return typeof value === \"string\" ? parseFloat(value) : value;\n      });\n      /**\n       * If we only have a single keyframe, we need to create an initial keyframe by reading\n       * the current value from the DOM.\n       */\n      if (keyframes.length === 1) {\n        keyframes.unshift(parseFloat(readInitialValue()));\n      }\n      var render = function render(latest) {\n        if (definition) latest = definition.toDefaultUnit(latest);\n        style.set(element, name, latest);\n      };\n      animation = new Animation(render, keyframes, Object.assign(Object.assign({}, options), {\n        duration: duration,\n        easing: easing\n      }));\n    } else {\n      var _target = keyframes[keyframes.length - 1];\n      style.set(element, name, definition && isNumber(_target) ? definition.toDefaultUnit(_target) : _target);\n    }\n    if (isRecording) {\n      record(element, key, keyframes, {\n        duration: duration,\n        delay: delay,\n        easing: easing,\n        repeat: repeat,\n        offset: offset\n      }, \"motion-one\");\n    }\n    motionValue.setAnimation(animation);\n    return animation;\n  };\n}\nexport { animateStyle };","map":{"version":3,"names":["getAnimationData","getMotionValue","isCssVar","registerCssVariable","Animation","defaults","isEasingGenerator","isNumber","time","isEasingList","noop","isTransform","addTransformToElement","transformDefinitions","convertEasing","supports","hydrateKeyframes","keyframesList","style","getStyleName","stopAnimation","getDevToolsRecord","window","__MOTION_DEV_TOOLS_RECORD","animateStyle","element","key","keyframesDefinition","options","record","isRecording","animation","duration","delay","endDelay","repeat","easing","direction","offset","allowWebkitAcceleration","data","canAnimateNatively","waapi","valueIsTransform","name","motionValue","values","definition","get","generator","readInitialValue","_a","_b","initialValue","keyframes","custom","createAnimation","undefined","cssRegisterProperty","map","value","toDefaultUnit","length","partialKeyframes","unshift","animationOptions","ms","iterations","fill","animate","finished","Promise","resolve","reject","onfinish","oncancel","target","then","set","cancel","catch","playbackRate","parseFloat","render","latest","Object","assign","setAnimation"],"sources":["D:/Documents/Temporary (No Storage)/GitHub/pollyliu1.github.io/node_modules/@motionone/dom/dist/animate/animate-style.es.js"],"sourcesContent":["import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { Animation } from '@motionone/animation';\nimport { defaults, isEasingGenerator, isNumber, time, isEasingList, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, direction, offset, allowWebkitAcceleration = false, } = options;\n    const data = getAnimationData(element);\n    let canAnimateNatively = supports.waapi();\n    const valueIsTransform = isTransform(key);\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, readInitialValue, valueIsTransform, name, motionValue);\n            easing = custom.easing;\n            if (custom.keyframes !== undefined)\n                keyframes = custom.keyframes;\n            if (custom.duration !== undefined)\n                duration = custom.duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we can animate this value with WAAPI, do so. Currently this only\n         * feature detects CSS.registerProperty but could check WAAPI too.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing) ? convertEasing(easing) : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing) ? easing.map(convertEasing) : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            const render = (latest) => {\n                if (definition)\n                    latest = definition.toDefaultUnit(latest);\n                style.set(element, name, latest);\n            };\n            animation = new Animation(render, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\nexport { animateStyle };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}